" syntastic
" let g:syntastic_always_populate_loc_list=1
" let g:syntastic_auto_loc_list=1
" let g:syntastic_check_on_open=1
" let g:syntastic_check_on_wq=0
" let g:syntastic_c_checkers=["gcc"]
" let g:syntastic_c_config_file='.clang'
" let g:syntastic_c_compiler='clang'
" let g:syntastic_c_compiler_options ='
"             \ -Weverything
"             \ -Wno-padded
"             \ -Wno-reserved-id-macro
"             \ -Wno-unused-const-variable
"             \ -Wno-sign-conversion
"             \ -Wno-old-style-cast
"             \ -Wno-switch-enum
"             \ -Wno-global-constructors
"             \ -Wno-exit-time-destructors
"             \ -Wno-c++11-long-long
"             \ -Wno-unused-macros
"             \ -Wno-documentation
"             \ -Wno-c++98-compat
"             \ -Wno-c++98-compat-pedantic'
" let g:syntastic_c_check_header=1
" let g:syntastic_c_remove_include_errors=1
" let g:syntastic_cpp_checkers=["gcc"]
" let g:syntastic_cpp_config_file='.clang'
" let g:syntastic_cpp_compiler='clang++'
" let g:syntastic_cpp_compiler_options ='
"             \ -Weverything
"             \ -Wno-padded
"             \ -Wno-reserved-id-macro
"             \ -Wno-unused-const-variable
"             \ -Wno-sign-conversion
"             \ -Wno-old-style-cast
"             \ -Wno-switch-enum
"             \ -Wno-global-constructors
"             \ -Wno-exit-time-destructors
"             \ -Wno-c++11-long-long
"             \ -Wno-unused-macros
"             \ -Wno-documentation
"             \ -Wno-c++98-compat
"             \ -Wno-c++98-compat-pedantic'
" let g:syntastic_cpp_check_header=1
" let g:syntastic_cpp_remove_include_errors=1
